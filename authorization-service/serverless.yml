service: authorization-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

custom:
  userPoolName: authorization-service-cognito-pool-${self:provider.stage}
  userPoolClientName: authorization-service-cognito-pool-client-${self:provider.stage}

resources:
#  Resources:
#    CognitoUserPool:
#      Type: AWS::Cognito::UserPool
#      Properties:
#        MfaConfiguration: OFF
#        UserPoolName: ${self:custom.userPoolName}
#        UsernameAttributes:
#          - email
#        Policies:
#          PasswordPolicy:
#            MinimumLength: 6
#            RequireLowercase: False
#            RequireNumbers: False
#            RequireSymbols: False
#            RequireUppercase: False
#    CognitoUserPoolClient:
#      Type: AWS::Cognito::UserPoolClient
#      Properties:
#        ClientName: ${self:custom.userPoolClientName}
#        GenerateSecret: False
#        CallbackURLs:
#          - http://localhost:3000
#          - http://localhost:3001
#          - https://dg2e8nno6k0ty.cloudfront.net/
#        AllowedOAuthFlows:
#          - code
#          - implicit
#        AllowedOAuthScopes:
#          - phone
#          - email
#          - openid
#          - profile
#          - aws.cognito.signin.user.admin
#        UserPoolId:
#          Ref: CognitoUserPool

  Outputs:
    BasicAuthorizerArn:
      Value: !GetAtt
        - BasicAuthorizerLambdaFunction
        - Arn
      Export:
        Name: BasicAuthorizerArn

functions:
  basicAuthorizer:
    handler: handler.basicAuthorizer

